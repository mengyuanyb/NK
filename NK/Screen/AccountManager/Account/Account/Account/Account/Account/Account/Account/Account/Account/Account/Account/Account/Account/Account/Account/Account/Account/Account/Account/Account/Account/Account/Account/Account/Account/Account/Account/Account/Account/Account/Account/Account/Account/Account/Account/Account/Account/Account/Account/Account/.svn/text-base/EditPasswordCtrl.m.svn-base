//
//  EditPasswordCtrl.m
//  NK
//
//  Created by Arthur on 12-8-11.
//
//

#import "EditPasswordCtrl.h"
#import "sOtherServices.h"
@interface EditPasswordCtrl ()

@end

@implementation EditPasswordCtrl
@synthesize m_pTvL;
@synthesize m_pContonR;
@synthesize m_pNewPW;
@synthesize m_pNewPW2;
@synthesize m_pOldPW;
@synthesize m_pUser;

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
    }
    return self;
}

- (void)viewDidLoad
{
    [super viewDidLoad];
    // Do any additional setup after loading the view from its nib.
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardWasShown:) name:UIKeyboardDidShowNotification object:nil];
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardWasHidden:) name:UIKeyboardDidHideNotification object:nil];
    
    [self setNaTitleViewText:@"修改密码"];
    
    sUserLogin* pCurUser =[sUserLogin getCurLoginUser];
    m_pUser.text    =[pCurUser getParamStr:@"account"];
    
    [m_pOldPW becomeFirstResponder];
        
    [m_pContonR removeFromSuperview];
}

//-(IBAction)onBack:(id)sender
//{
//    dispatch_async(dispatch_get_main_queue(), ^{
//        [[NSNotificationCenter defaultCenter]postNotificationName:@"popViewCtrl" object:nil];
//    });
//}

-(IBAction)onTapHideKeyboardBtn:(id)sender
{
    [self.m_pNewPW2 resignFirstResponder];
    [self.m_pNewPW resignFirstResponder];
    [self.m_pOldPW resignFirstResponder];
}

-(IBAction)onTapSave:(id)sender;
{
    dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^{
        sUserUpdatePw* pUpdatePw  =[[sUserUpdatePw alloc]init];
        sUserLogin* pCurUser =[sUserLogin getCurLoginUser];
        BOOL bUpdate    =(1000 ==[pUpdatePw updatePwWithUserID:[pCurUser getParamNum:@"uid"].intValue
                                                PwdOld:m_pOldPW.text Pwd1:m_pNewPW.text Pwd2:m_pNewPW2.text]);
        
        dispatch_async(dispatch_get_main_queue(), ^{
            NSString* sReslut   =bUpdate?@"修改密码成功":@"修改密码失败，请重新输入！";
            [[NSNotificationCenter defaultCenter]postNotificationName:@"showActionReslut" object:sReslut];
            if(bUpdate)
                //[[NSNotificationCenter defaultCenter]postNotificationName:@"popViewCtrl" object:nil];
                [self.navigationController popViewControllerAnimated:YES];
        });
    });

}

- (void)keyboardWasHidden:(NSNotification*)aNotification
{
    [self moveTextViewForKeyboard:aNotification up:NO];
}


// Called when the UIKeyboardDidShowNotification is sent.
- (void)keyboardWasShown:(NSNotification*)aNotification
{
    [self moveTextViewForKeyboard:aNotification up:YES];
}

- (void) moveTextViewForKeyboard:(NSNotification*)aNotification up: (BOOL) up
{
    NSDictionary* userInfo = [aNotification userInfo];
    
    // Get animation info from userInfo
    CGRect keyboardEndFrame;
    [[userInfo objectForKey:UIKeyboardFrameEndUserInfoKey] getValue:&keyboardEndFrame];
    
    CGRect newFrame =m_pTvL.superview.bounds;
    CGRect keyboardFrame = [self.view convertRect:keyboardEndFrame toView:nil];
    if(up)
        newFrame.size.height -= keyboardFrame.size.height;
    else
        ;
    m_pTvL.frame = newFrame;
    [m_pTvL flashScrollIndicators];
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    return 250;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return 1;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    UITableViewCell* cell = [[UITableViewCell alloc]initWithStyle:UITableViewCellStyleDefault reuseIdentifier:@"sss"];
    {
        [m_pContonR removeFromSuperview];
        [cell.contentView addSubview:m_pContonR];
        m_pContonR.frame    =CGRectSetY(m_pContonR.frame, 0);
    }
    cell.clipsToBounds  =true;
    cell.selectionStyle =UITableViewCellSelectionStyleNone;
    
    return cell;
}

@end
